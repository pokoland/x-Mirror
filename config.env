
# CONFIGURATION REQUISE
BOT_TOKEN = "7931483027:AAFT9r0avLXn5cOCNA2KiWyUCUdm9yZ_OgQ"  # Token du bot Telegram
GDRIVE_FOLDER_ID = ""  # ID du dossier Google Drive
OWNER_ID = 8140299716 # ID du propriétaire (votre ID Telegram)
DOWNLOAD_DIR = "/usr/src/app/downloads"  # Dossier de téléchargement
DOWNLOAD_STATUS_UPDATE_INTERVAL = 10  # Intervalle de mise à jour du statut des téléchargements en secondes
AUTO_DELETE_MESSAGE_DURATION = 20  # Durée avant suppression automatique des messages (en secondes)
IS_TEAM_DRIVE = "False"  # True si vous utilisez un Team Drive, sinon False
TELEGRAM_API = 25926022 # API ID Telegram
TELEGRAM_HASH = "30db27d9e56d854fb5e943723268db32"  # Hash API Telegram
BASE_URL_OF_BOT = ""  # Lien Web du bot, requis sur Heroku pour éviter la mise en veille ou utiliser un worker si vous ne souhaitez pas utiliser le web (sélection)

# CONFIGURATION OPTIONNELLE
DATABASE_URL = "mongodb+srv://altof2:123Bonjoure@cluster0.s1suq.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"  # URL de la base de données
AUTHORIZED_CHATS = "-1002698474966"  # Séparez les IDs par un espace
SUDO_USERS = "6120299142 8140299716"  # IDs Sudo, séparés par un espace
IGNORE_PENDING_REQUESTS = ""  # Ignore les requêtes en attente si True
USE_SERVICE_ACCOUNTS = ""  # True pour utiliser des comptes de service
INDEX_URL = ""  # URL d’indexation si vous utilisez un index drive
STATUS_LIMIT = "3"  # Limite recommandée : 4
UPTOBOX_TOKEN = ""  # Token Uptobox si utilisé
MEGA_API_KEY = ""  # API Mega
MEGA_EMAIL_ID = ""  # Email Mega
MEGA_PASSWORD = ""  # Mot de passe Mega
BLOCK_MEGA_FOLDER = ""  # Bloquer les dossiers Mega si True
BLOCK_MEGA_LINKS = ""  # Bloquer les liens Mega si True
STOP_DUPLICATE = ""  # Empêche les doublons si True
RECURSIVE_SEARCH = ""  # True ou False pour rechercher dans les sous-dossiers (uniquement ID de drive partagé ou root, pas les IDs de dossier)
SHORTENER = ""  # Service de raccourcisseur de lien
SHORTENER_API = ""  # API Key du raccourcisseur

# LEECH
TG_SPLIT_SIZE = ""  # Laisser vide pour taille max (2Go) ou ajouter la taille en bytes
AS_DOCUMENT = ""  # True pour envoyer en document
EQUAL_SPLITS = ""  # True pour diviser en parties égales
CUSTOM_FILENAME = ""  # Nom de fichier personnalisé

# qBittorrent
IS_VPS = ""  # Ne pas mettre True même si vous utilisez un VPS, sauf si vous avez des erreurs avec le serveur web
SERVER_PORT = "80"  # Seulement pour VPS même si IS_VPS est False

# Si vous voulez utiliser des credentials externes depuis des Index Links, remplissez ces variables avec les liens directs
ACCOUNTS_ZIP_URL = ""  # URL directe du ZIP des comptes de service
TOKEN_PICKLE_URL = ""  # URL directe du token pickle
MULTI_SEARCH_URL = ""  # Vous pouvez utiliser un lien raw gist (sans l’id de commit, voir guide Heroku)

# Pour définir les limites, n’ajoutez pas d’unité. L’unité par défaut est GB.
TORRENT_DIRECT_LIMIT = ""  # Limite des torrents directs
ZIP_UNZIP_LIMIT = ""  # Limite des opérations zip/unzip
CLONE_LIMIT = ""  # Limite de clonage
MEGA_LIMIT = ""  # Limite Mega

# Bouton View Link pour ouvrir le lien Index dans le navigateur au lieu du lien direct de téléchargement
# Vérifiez la compatibilité avec votre index. Si l’URL se termine par ?a=view, remplissez True
VIEW_LINK = ""

# Ajouter des boutons supplémentaires (trois boutons déjà ajoutés : Drive Link, Index Link, View Link)
# Si vous ne savez pas, laissez vide
BUTTON_FOUR_NAME = "Kingcey-Zone"
BUTTON_FOUR_URL = "t.me/KingceyZone"
BUTTON_FIVE_NAME = ""
BUTTON_FIVE_URL = ""
BUTTON_SIX_NAME = ""
BUTTON_SIX_URL = ""

# Plugins de recherche qBittorrent, supprimez/ajoutez ceux que vous voulez avec les liens github raw
SEARCH_PLUGINS = '["https://raw.githubusercontent.com/qbittorrent/search-plugins/master/nova3/engines/rarbg.py",
                   "https://raw.githubusercontent.com/v1k45/1337x-qBittorrent-search-plugin/master/leetx.py",
                   "https://raw.githubusercontent.com/MaurizioRicci/qBittorrent_search_engines/master/kickass_torrent.py",
                   "https://raw.githubusercontent.com/qbittorrent/search-plugins/master/nova3/engines/piratebay.py",
                   "https://raw.githubusercontent.com/qbittorrent/search-plugins/master/nova3/engines/legittorrents.py",
                   "https://raw.githubusercontent.com/qbittorrent/search-plugins/master/nova3/engines/limetorrents.py",
                   "https://raw.githubusercontent.com/qbittorrent/search-plugins/master/nova3/engines/torlock.py",
                   "https://raw.githubusercontent.com/qbittorrent/search-plugins/master/nova3/engines/torrentscsv.py",
                   "https://raw.githubusercontent.com/qbittorrent/search-plugins/master/nova3/engines/zooqle.py",
                   "https://raw.githubusercontent.com/nindogo/qbtSearchScripts/master/magnetdl.py",
                   "https://raw.githubusercontent.com/msagca/qbittorrent_plugins/main/uniondht.py",
                   "https://raw.githubusercontent.com/khensolomon/leyts/master/yts.py",
                   "https://raw.githubusercontent.com/MadeOfMagicAndWires/qBit-plugins/master/engines/linuxtracker.py",
                   "https://raw.githubusercontent.com/MadeOfMagicAndWires/qBit-plugins/master/engines/nyaasi.py"]'
